#include<iostream>
#include<vector>
using namespace std;

void printVector(vector<int>&v)
{
	for (vector<int>::iterator it = v.begin(); it != v.end(); it++)
	{
		cout << *it << " ";
	}
	cout << endl;
}

// vector容器的容量和大小操作
void test01()
{
	vector<int>v1;
	for (int i = 0; i < 10; i++)
	{
		v1.push_back(i);
	}
	printVector(v1);

	if (v1.empty()) // 为真，代表容器为空
	{
		cout << "v1为空" << endl;
	}
	else
	{
		cout << "v1不为空" << endl;
		cout << "v1的容量为：" << v1.capacity() << endl;
		cout << "v1的元素数量为：" << v1.size() << endl;
	}

	// 重新指定大小
	v1.resize(15); // 如果重新指定的比原来长，默认用0填充新的位置
	printVector(v1);
	cout << "v1的容量为：" << v1.capacity() << endl;
	cout << "v1的元素数量为：" << v1.size() << endl;

	v1.resize(20,100); // 利用重载版本，指定默认填充值为100
	printVector(v1);
	cout << "v1的容量为：" << v1.capacity() << endl;
	cout << "v1的元素数量为：" << v1.size() << endl;

	v1.resize(5); // size会变，capacity不变
	printVector(v1);
	cout << "v1的容量为：" << v1.capacity() << endl;
	cout << "v1的元素数量为：" << v1.size() << endl;
}

int main()
{
	test01();
	system("pause");
	return 0;
}