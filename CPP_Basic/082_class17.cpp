#include<iostream>
using namespace std;

// 成员变量和成员函数是分开存储的

class Person
{

};

class Person2
{
	int m_A; // 非静态成员变量 属于类的对象上的数据
};

class Person3
{
	int m_A; // 非静态成员变量 属于类的对象上的数据
	static int m_B; // 静态成员变量 不属于类的对象上

	void func() {} // 非静态成员函数 不属于类的对象上
	
	static void func2() {} // 静态成员函数 不属于类的对象上
};

int Person3::m_B = 3;

void test01()
{
	Person p;
	// 空类对象占用内存空间为：1
	// C++编译器会给每个空对象也分配一个字节空间，是为了区分空对象占内存的位置
	// 每个空对象也应该有一个独一无二的内存地址
	cout << "size of p = " << sizeof(p) << endl;
}

void test02()
{
	Person2 p;
	// 非空对象占用内存空间与非静态成员变量有关
	cout << "size of p = " << sizeof(p) << endl;
	Person3 p2;
	cout << "size of p2 = " << sizeof(p2) << endl;

}

int main()
{

	//test01();
	test02();

	system("pause");

	return 0;
}